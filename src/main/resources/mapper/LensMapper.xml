<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.backend.dao.LensMapper">
    <resultMap id="BaseResultMap" type="com.example.backend.model.Lens">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="lensID" jdbcType="VARCHAR" property="lensID" />
        <result column="lensName" jdbcType="VARCHAR" property="lensName" />
        <result column="price" jdbcType="DECIMAL" property="price" />
        <result column="refractiveIndex" jdbcType="VARCHAR" property="refractiveIndex" />
        <result column="material" jdbcType="VARCHAR" property="material" />
        <result column="radian" jdbcType="VARCHAR" property="radian" />
        <result column="variety" jdbcType="VARCHAR" property="variety" />
        <result column="film" jdbcType="VARCHAR" property="film" />
        <result column="design" jdbcType="VARCHAR" property="design" />
        <result column="state" jdbcType="VARCHAR" property="state" />
        <result column="description" jdbcType="VARCHAR" property="description" />
        <result column="descriptionB" jdbcType="VARCHAR" property="descriptionB" />
        <result column="deliveryTime" jdbcType="INTEGER" property="deliveryTime" />
        <result column="sphMin" jdbcType="DECIMAL" property="sphMin" />
        <result column="sphMax" jdbcType="DECIMAL" property="sphMax" />
        <result column="cylMin" jdbcType="DECIMAL" property="cylMin" />
        <result column="cylMax" jdbcType="DECIMAL" property="cylMax" />
        <result column="classification" jdbcType="VARCHAR" property="classification" />
    </resultMap>

    <insert id="addLens" parameterType="com.example.backend.model.Lens">
        INSERT INTO lens ( lensID,lensName,price,refractiveIndex,material,radian,variety,film,design,state,description,descriptionB,deliveryTime,sphMin,sphMax,cylMin,cylMax,classification )
        values (#{lensID},#{lensName},#{price},#{refractiveIndex},#{material},#{radian},#{variety},#{film},#{design},#{state},#{description},#{descriptionB},#{deliveryTime},#{sphMin},#{sphMax},#{cylMin},#{cylMax},#{classification})
    </insert>

    <select id="lensList" resultType="com.example.backend.model.Lens">
        SELECT *
        FROM lens
        limit #{page},#{size}
    </select>

    <update id="updateLens" parameterType="com.example.backend.model.Lens">
        UPDATE lens
        SET lensName=#{lensName},price=#{price},refractiveIndex=#{refractiveIndex},material=#{material},radian=#{radian},variety=#{variety},film=#{film},design=#{design},state=#{state},description=#{description}
        WHERE lensID=#{lensID}
    </update>

    <delete id="deleteLens" parameterType="String">
        DELETE FROM lens WHERE lensID=#{lensID}
    </delete>

    <select id="findByLensID" parameterType="String" resultType="com.example.backend.model.Lens">
        SELECT *
        FROM lens
        WHERE lensID=#{lensID}
    </select>

    <!--查询镜片总数-->
    <select id="lensTotal" resultType="Integer">
        SELECT COUNT(*) FROM lens
    </select>
</mapper>